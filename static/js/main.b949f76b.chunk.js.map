{"version":3,"sources":["Service/FrontService.js","Components/ListComponent.js","Components/MainComponent.js","Assets/Ahorcado1.PNG","Assets/Ahorcado2.PNG","Assets/Ahorcado3.PNG","Assets/Ahorcado4.PNG","Assets/Ahorcado5.PNG","Assets/Ahorcado6.PNG","Assets/Ahorcado7.PNG","Components/PartidaComponent.js","Utils/Utils.js","Components/InstructorApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["API_URL","GAME","ListComponent","useState","palabras","setPalabras","useEffect","refreshPalabras","axios","get","then","response","console","log","data","className","map","palabra","id","nombre","Button","href","variant","size","block","MainComponent","inputRef","useRef","show","setShow","status","setStatus","onClick","Modal","onHide","Header","closeButton","Title","Body","type","placeholder","aria-label","aria-describedby","width","ref","current","value","put","catch","error","PartidaComponent","seterror","partida","setPartida","img_url","useMemo","numeroDeFallos","Ahorcado1","Ahorcado2","Ahorcado3","Ahorcado4","Ahorcado5","Ahorcado6","Ahorcado7","isFinished","palabraRellenada","includes","idPartida","createNewGame","disabled","letter","str","length","toLowerCase","match","letrasUsadas","handleValidate","src","alt","InstructorApp","path","exact","component","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b949f76b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://ahorcadorest.eu-west-3.elasticbeanstalk.com/\";\r\nconst NEW_GAME = \"nuevaPartida\";\r\nconst GAME = \"partida/\";\r\nconst INSERT_PALABRA = \"palabra/\";\r\nconst SEPARATOR = \"/\";\r\n\r\nexport function retrieveAllWords() {\r\n  return axios.get(`${API_URL}`);\r\n}\r\n\r\nexport function CreateGame() {\r\n  return axios.get(`${API_URL}` + NEW_GAME);\r\n}\r\n\r\nexport function UpdateGame(idPartida, letter) {\r\n  return axios.put(\r\n    `${API_URL}` + GAME + `${idPartida}` + SEPARATOR + `${letter}`\r\n  );\r\n}\r\n\r\nexport function InsertPalabra(nombre) {\r\n  return axios.put(`${API_URL}` + INSERT_PALABRA + `${nombre}`);\r\n}\r\n\r\nexport function GetPalabraRellenada(idPartida) {\r\n  return axios.get(`${API_URL}` + GAME + `${idPartida}`);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { retrieveAllWords } from \"../Service/FrontService\";\r\n\r\nexport function ListComponent() {\r\n  const [palabras, setPalabras] = useState([]);\r\n\r\n  useEffect(() => {\r\n    refreshPalabras();\r\n  }, []);\r\n\r\n  const refreshPalabras = () => {\r\n    retrieveAllWords().then((response) => {\r\n      console.log(response);\r\n      setPalabras(response.data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Lista de Palabras</h3>\r\n      <div>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Id</th>\r\n              <th>Nombre</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {palabras?.map((palabra) => (\r\n              <tr key={palabra.id}>\r\n                <td>{palabra.id}</td>\r\n                <td>{palabra.nombre}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n          <tr>\r\n            <Button href=\"/AhorcadoApp/#\" variant=\"primary\" size=\"lg\" block>\r\n              Volver\r\n            </Button>{\" \"}\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Style.css\";\r\nimport { InsertPalabra } from \"../Service/FrontService\";\r\n\r\nexport function MainComponent() {\r\n  const inputRef = useRef(null);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const sendData = () => {\r\n    InsertPalabra(inputRef.current.value)\r\n      .then((response) => {\r\n        setStatus(response.status);\r\n      })\r\n      .catch(function (error) {\r\n        if (error.response) {\r\n          setStatus(error.response.status);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"center\">\r\n          <Button\r\n            href=\"/AhorcadoApp/#/partida\"\r\n            variant=\"primary\"\r\n            size=\"lg\"\r\n            block\r\n          >\r\n            Nueva Partida\r\n          </Button>\r\n          <Button\r\n            href=\"/AhorcadoApp/#/palabras\"\r\n            variant=\"primary\"\r\n            size=\"lg\"\r\n            block\r\n          >\r\n            Ver Lista de Palabras\r\n          </Button>\r\n          <Button variant=\"primary\" size=\"lg\" block onClick={handleShow}>\r\n            Añadir Palabras\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Añadir Palabra</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Escribe la palabra a registrar(maximo 10 letras)\"\r\n              aria-label=\"Escribe la palabra a registrar(maximo 10 letras)\"\r\n              aria-describedby=\"basic-addon2\"\r\n              width=\"20%\"\r\n              ref={inputRef}\r\n            ></input>\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={sendData}\r\n              >\r\n                Añadir\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {status === 200 && (\r\n            <div className=\"status ok\">Se ha insertado correctamente</div>\r\n          )}\r\n          {status === 400 && (\r\n            <div className=\"status bad\">\r\n              Error de validación: la palabra ya existe o no es una palabra\r\n            </div>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Ahorcado1.59c51b6d.PNG\";","export default __webpack_public_path__ + \"static/media/Ahorcado2.c590cc01.PNG\";","export default __webpack_public_path__ + \"static/media/Ahorcado3.2847d0a3.PNG\";","export default __webpack_public_path__ + \"static/media/Ahorcado4.56828353.PNG\";","export default __webpack_public_path__ + \"static/media/Ahorcado5.c3fb6c32.PNG\";","export default __webpack_public_path__ + \"static/media/Ahorcado6.040d8ea5.PNG\";","export default __webpack_public_path__ + \"static/media/Ahorcado7.39de69cf.PNG\";","import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport {\r\n  CreateGame,\r\n  GetPalabraRellenada,\r\n  UpdateGame,\r\n} from \"../Service/FrontService\";\r\nimport \"./Style.css\";\r\nimport { imageAhorcado, isLetter } from \"../Utils/Utils\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport function PartidaComponent() {\r\n  const inputRef = useRef(null);\r\n\r\n  const [error, seterror] = useState(\"\");\r\n\r\n  const [partida, setPartida] = useState(null);\r\n\r\n  const img_url = useMemo(() => {\r\n    if (partida) {\r\n      return imageAhorcado(partida.numeroDeFallos);\r\n    }\r\n    return null;\r\n  }, [partida]);\r\n\r\n  const isFinished = useMemo(() => {\r\n    if (partida) {\r\n      if (!partida.palabraRellenada?.includes(\"-\")) return true;\r\n      else if (partida.numeroDeFallos <= 0) {\r\n        GetPalabraRellenada(partida.id).then((response) => {\r\n          setPartida(response.data);\r\n          console.log(response.data);\r\n          return true;\r\n        });\r\n      }\r\n    }\r\n    return false;\r\n  }, [partida]);\r\n\r\n  useEffect(() => {\r\n    createNewGame();\r\n  }, []);\r\n\r\n  const createNewGame = () => {\r\n    CreateGame().then((response) => {\r\n      setPartida(response.data);\r\n    });\r\n  };\r\n\r\n  const handleValidate = () => {\r\n    if (inputRef.current.value?.length === 0) {\r\n      seterror(\"El valor no puede estar vacio\");\r\n      return false;\r\n    } else if (inputRef.current.value?.length > 1) {\r\n      seterror(\"El valor no puede ser más de una letra\");\r\n      return false;\r\n    } else if (!isLetter(inputRef.current.value.toLowerCase())) {\r\n      seterror(\"El valor no es una letra\");\r\n      return false;\r\n    } else if (partida.letrasUsadas.includes(inputRef.current.value)) {\r\n      seterror(\"El valor esta repetido\");\r\n      return false;\r\n    }\r\n\r\n    seterror(\"\");\r\n    return true;\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (handleValidate()) {\r\n      UpdateGame(partida.id, inputRef.current.value).then((response) => {\r\n        setPartida(response.data);\r\n      });\r\n      inputRef.current.value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"input-letter\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Escribe una letra\"\r\n              aria-label=\"Escribe una letra\"\r\n              aria-describedby=\"basic-addon2\"\r\n              width=\"20%\"\r\n              disabled={isFinished}\r\n              ref={inputRef}\r\n            ></input>\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={handleClick}\r\n                disabled={isFinished}\r\n              >\r\n                Enviar\r\n              </button>\r\n            </div>\r\n            {error && error !== \"\" && <h3 className=\"error\">{error}</h3>}\r\n          </div>\r\n        </div>\r\n\r\n        {partida && (\r\n          <div>\r\n            <h1>{partida?.palabraRellenada}</h1>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"row\">\r\n        {partida && (\r\n          <div>\r\n            <h3>Fallos Restantes: {partida?.numeroDeFallos}</h3>\r\n            <h3>Letras Usadas:</h3>\r\n            <h3>{partida?.letrasUsadas}</h3>\r\n          </div>\r\n        )}\r\n        {img_url && (\r\n          <div>\r\n            <img src={img_url} alt=\"\"></img>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {partida && partida?.numeroDeFallos <= 0 && (\r\n        <div>\r\n          <h3 className=\"resultado derrota\">DERROTA</h3>\r\n        </div>\r\n      )}\r\n      {partida &&\r\n        !partida?.palabraRellenada.includes(\"-\") &&\r\n        partida.numeroDeFallos > 0 && (\r\n          <div>\r\n            <h3 className=\"resultado victoria\">VICTORIA</h3>\r\n          </div>\r\n        )}\r\n\r\n      <div className=\"btn-group-vertical\">\r\n        <div className=\"buttonGroupPartida\">\r\n          <Button href=\"/AhorcadoApp/#\" variant=\"info\" block>\r\n            Volver\r\n          </Button>\r\n          <Button variant=\"info\" onClick={createNewGame} block>\r\n            Nueva Partida\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// @ts-nocheck\r\nimport Ahorcado1 from \"../Assets/Ahorcado1.PNG\";\r\nimport Ahorcado2 from \"../Assets/Ahorcado2.PNG\";\r\nimport Ahorcado3 from \"../Assets/Ahorcado3.PNG\";\r\nimport Ahorcado4 from \"../Assets/Ahorcado4.PNG\";\r\nimport Ahorcado5 from \"../Assets/Ahorcado5.PNG\";\r\nimport Ahorcado6 from \"../Assets/Ahorcado6.PNG\";\r\nimport Ahorcado7 from \"../Assets/Ahorcado7.PNG\";\r\n\r\nexport function isLetter(str) {\r\n  return str.length === 1 && str.match(/[a-z]/i);\r\n}\r\n\r\nexport function imageAhorcado(id) {\r\n  const ahorcadoImages = [\r\n    Ahorcado1,\r\n    Ahorcado2,\r\n    Ahorcado3,\r\n    Ahorcado4,\r\n    Ahorcado5,\r\n    Ahorcado6,\r\n    Ahorcado7,\r\n  ];\r\n  return ahorcadoImages[id];\r\n}\r\n","import {ListComponent} from './ListComponent';\r\nimport {MainComponent} from './MainComponent';\r\nimport {PartidaComponent} from './PartidaComponent';\r\nimport React, { Component } from 'react';\r\nimport { Route, Switch, HashRouter as HashRouter } from 'react-router-dom'\r\n\r\nclass InstructorApp extends Component {\r\n    render() {\r\n        return (            \r\n            <HashRouter>\r\n            <>\r\n            <div className=\"title\">\r\n                <h1>Ahorcado</h1>\r\n            </div>\r\n                \r\n                <Switch>\r\n                    <Route path=\"/\" exact component={MainComponent} />\r\n                    <Route path=\"/palabras\" exact component={ListComponent} />\r\n                    <Route path=\"/partida\" component={PartidaComponent} />\r\n                </Switch>\r\n            </>\r\n        </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InstructorApp;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport InstructorApp from './Components/InstructorApp';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <InstructorApp />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}